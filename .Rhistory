library(devtools)
find.package("devtools")
find.package("devtools")
install.packages("devtools")
find.package("devtools")
library(devtools)
find_rtools()
library(datasets)
data(iris)
?iris
apply(iris, 2, mean)
iris
apply(iris, 2, mean)
traceback()
debug(apply(iris, 2, mean))
debug (apply)
apply(iris, 2, mean)
exit
close
colMeans(iris)
colMeans(iris, 2)
colMeans(iris3)
apply(iris[, 1:4], 2, mean)
exit
back
out
debug()
apply(iris[, 1:4], 2, mean)
set.seed(1)
rpois(5, 2)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(y)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile="data.csv", method="curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile="data.csv")
lis.files
list.files
list.files("")
list.files("/")
list.files(".")
read.csv("data.csv")
data <- read.csv("data.csv")
head(data)
tables()
library(data.table)
install.packages("swirl")
install.packages("data.table")
library("data.table")
help("data.table")
data <- read.csv("data.csv")
head(data, 3)
data[,c(2,3)]
head(data, 3)
data[data$wgtp65=="147",]
data[data$VAL>="1000000",]
data[data$VAL>="1000000", .N]
data[data$VAL>="1000000", .N, by=VAL]
data[, {VAL >= 10000000}]
data[data$wgtp65=="147",]
data[data$wgtp65=="147", .N]
data[data$VAL=="1000000", .N]
data[data$VAL=="1000000", nomatch=0]
data[data$VAL=="1000000", nomatch=F]
data[data$VAL=="1000000", nomatch=FALSE]
head(data[,VAL])
head(data[,data$VAL])
head(data[,y=$VAL])
head(data[,y=VAL])
subset(data, VAL)
subset(data, data$VAL)
subset(data, select="VAL")
subs = subset(data, select="VAL")
subs <- subset(data, select="VAL")
subs
subsis <- complete.cases(subs)
data[subsis]
data[,subsis]
subset(data, subsis)
subset(subs, subsis)
subs <- subset(data, subsis)
subs[subs>="1000000",]
subs[subs$VAL>="1000000",]
subs[subs$VAL>="1000000", .N]
subset(data, VAL >=1000000)
count(subset(data, VAL >=1000000))
subset(data, VAL >=1000000, .N)
head(subset(data, VAL >=1000000))
vals <- subset(data, VAL >=1000000)
vals
vals <- subset(data, VAL>="1000000)
")"
"
vals <- subset(data, VAL>="1000000")
vals
head(vals)
vals <- subset(data, data$VAL>="1000000", VAL)
vals
vals <- subset(data, VAL=="1000000", VAL)
read.csv("data.csv")
data <- read.csv("data.csv")
Vi <- data[,VAL]
library("data.table", lib.loc="~/R/win-library/3.1")
detach("package:data.table", unload=TRUE)
library("data.table", lib.loc="~/R/win-library/3.1")
detach("package:data.table", unload=TRUE)
Vi <- data[,VAL]
Vi <- data[,data$VAL]
library("data.table", lib.loc="~/R/win-library/3.1")
library("data.table", lib.loc="~/R/win-library/3.1")
Vi <- data[,data$VAL]
tables()
dt = data
dt = data.table(data)
tables()
dt[dt$VAL=="1000000",]
dt[dt$VAL>="1000000",]
g <- dt[dt$VAL>="1000000",]
subset(dt,VAL>="1000000", VAL)
subset(dt,VAL>="5000000", VAL)
1 <- subset(dt,VAL>="1000000", VAL)
uno <- subset(dt,VAL>="1000000", VAL)
cinc <- subset(dt,VAL>="5000000", VAL)
uno <- subset(dt,VAL>="24", VAL)
uno <- subset(dt,VAL=="24", VAL)
subset(dt,VAL=="24", VAL)
dos <- subset(dt,VAL=="24", VAL)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", destfile="data2.xlsx")
colindex <- 7:15
rowindex <- 18:23
dat <- read.xlsx("data2.xlsx",sheetIndex=1,colIndex=colindex, rowIndex=rowindex)
dat <- read2.xlsx("data2.xlsx",sheetIndex=1,colIndex=colindex, rowIndex=rowindex)
install.packages("read.xlsx")
dat <- read.xlsx("data2.xlsx",sheetIndex=1,colIndex=colindex, rowIndex=rowindex)
load(read.xlsx)
library("data.table", lib.loc="~/R/win-library/3.1")
library("read.xlsx")
install.packages("read.xlsx")
library("read.xlsx")
install.packages("read2.xlsx")
install.packages("xlsx")
library("xlsx")
dat <- read.xlsx("data2.xlsx",sheetIndex=1,colIndex=colindex, rowIndex=rowindex)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", destfile="data2.xlsx", mode="wb")
dat <- read.xlsx("data2.xlsx",sheetIndex=1,colIndex=colindex, rowIndex=rowindex)
sum(dat$Zip*dat$Ext,na.rm=T)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", destfile="data3.xml")
data <- "data3.xml"
install.packages("XML")
library(XML)
data <- https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml
data <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
data <- xmlTreeParse(data, useInternal=t)
data <- xmlTreeParse(data, useInternal=T)
data <- xmlTreeParse(data, useInternal=TRUE)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
data <- xmlTreeParse(url, useInternal=TRUE)
url <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
data <- xmlTreeParse(url, useInternal=TRUE)
rootnode <- xmlRoot(data)
rootnode
xmlName(rootNode)
xmlName(rootnode)
rootnode[1]
rootnode[[1]]
rootnode[[[1]]]
rootnode[[1]][1]
rootnode[[1]][[1]]
xpathSApply(rootnode,"//zipcode",xmlValue)
zips <- xpathSApply(rootnode,"//zipcode",xmlValue)
zips <- data.table(zips)
tables()
zips[1,1]
subset(zips, zips="21231")
zips2 <- subset(zips, zips="21231")
zips2 <- subset(zips, zips$zips="21231")
zips2 <- subset(zips,zips=="21231",zips)
zips2 <- subset(zips,zips=="21231")
zips2
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile="data4.csv")
read.csv("data4.csv")
data <- read.csv("data4.csv")
fread("data4.csv")
library("data.table", lib.loc="~/R/win-library/3.1")
fread("data4.csv")
DT <- fread("data4.csv")
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
??system.time
??system.time)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time((rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
proc.time()
DT[,mean(pwgtp15),by=SEX]
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?nlme
library(lattice)
library(datasets)
data(airquality)
xyplot(Ozone ~ Wind | factor(Month), data = airquality)
splom
?splom
?par
?print.trellis
?trellis.par.set
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
install.packages("ggplo23")
install.packages("ggplot2")
library(ggplot2)
library("ggplot2")
library(qplot)
library("ggplot")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library("qplot")
?ggplot2
install.packages(c("httr", "RCurl"))
install.packages(c("class", "mgcv"), lib="C:/Program Files/R/R-3.1.1/library")
library("grid", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("lattice", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("grDevices", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("graphics", lib.loc="C:/Program Files/R/R-3.1.1/library")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
detach("package:graphics", unload=TRUE)
detach("package:grDevices", unload=TRUE)
library("grDevices", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("graphics", lib.loc="C:/Program Files/R/R-3.1.1/library")
install.packages("hhplot")
install.packages("ggplot2")
library("ggplot2", lib.loc="~/R/win-library/3.1")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?transform
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + stats_smooth("loess")
?mutate
library("mutate")
library("plyr")
?mutate
read.table("clean_set.txt")
setwd("D:/Academia/Open/Getting and Cleaning Data/Assignments/Cleaning-Data-1")
read.table("clean_set.txt")
clean_set <- read.table("clean_set.txt")
clean_set
head(clean_set)
?read.table
head(clean_set, TRUE)
clean_set <- read.table("clean_set.txt", TRUE)
head(clean_set)
View(clean_set)
clean_set <- read.table("clean_set.txt", TRUE)
head(clean_set, n=15)
